/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.ManageFlight;
import Business.Airliner.Airliner;
import Business.Schedule.Flight;
import Business.Schedule.FlightSchedule;
import Business.TravelAgency;
import java.awt.CardLayout;
import UserInterface.MainJFrame;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author apple
 */
public class ViewFlightJPanel extends javax.swing.JPanel {
    private JPanel rightPanel;
    private Flight flight;
    private FlightSchedule flightSchedule; 
    private Airliner airliner;
    private TravelAgency travelAgency;
    /**
     * Creates new form ViewFlightJPanel
     */
    public ViewFlightJPanel(JPanel rightPanel,Flight flight, Airliner airliner,TravelAgency travelAgency) {
        initComponents();
        this.rightPanel = rightPanel;
        this.airliner = airliner;
        this.travelAgency = travelAgency;
        this.flightSchedule = airliner.getFlightSchedule();
        this.flight = flight;
        populateTable();
        setFieldEnabled(false);
    }
    private void populateTable(){
        
        txtFlightNum.setText(flight.getFlightNum());
        txtAirplane.setText(flight.getAirplane());
        txtFrom.setText(flight.getFrom());
        txtTo.setText(flight.getTo());
        Date date = flight.getDepartureTime();  
        DateFormat dateFormat = new SimpleDateFormat("dd-MMM-yyyy HH:mm:ss");  
        String strDate = dateFormat.format(date);
        txtDeparture.setText(strDate);
        Date date2 = flight.getArrivalTime();  
        DateFormat dateFormat2 = new SimpleDateFormat("dd-MMM-yyyy HH:mm:ss");  
        String strDate2 = dateFormat2.format(date2);
        txtArrival.setText(strDate2);
        DefaultComboBoxModel model = (DefaultComboBoxModel) timeComboBox.getModel();
        model.removeAllElements();
        model.addElement("Morning");
        model.addElement("Day");
        model.addElement("Evening");
    }
    private void setFieldEnabled(boolean b){
        txtFlightNum.setEnabled(b);
        txtAirplane.setEnabled(b);
        txtFrom.setEnabled(b);
        txtTo.setEnabled(b);
        txtArrival.setEnabled(b);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtFlightNum = new javax.swing.JTextField();
        txtAirplane = new javax.swing.JTextField();
        txtFrom = new javax.swing.JTextField();
        txtTo = new javax.swing.JTextField();
        txtArrival = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        timeComboBox = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        txtDeparture = new javax.swing.JTextField();
        btnBack = new javax.swing.JButton();
        btnUpdateFlight = new javax.swing.JButton();
        btnConfirm = new javax.swing.JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("View Flight");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(203, 11, -1, -1));

        jLabel2.setText("FlightNum");
        jLabel2.setMinimumSize(new java.awt.Dimension(60, 25));
        jLabel2.setPreferredSize(new java.awt.Dimension(60, 25));
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 60, -1, -1));

        jLabel3.setText("Airplane");
        jLabel3.setMinimumSize(new java.awt.Dimension(60, 25));
        jLabel3.setPreferredSize(new java.awt.Dimension(60, 25));
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 90, -1, -1));

        jLabel4.setText("From");
        jLabel4.setMinimumSize(new java.awt.Dimension(60, 25));
        jLabel4.setPreferredSize(new java.awt.Dimension(60, 25));
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 120, -1, -1));

        jLabel5.setText("To");
        jLabel5.setMinimumSize(new java.awt.Dimension(60, 25));
        jLabel5.setPreferredSize(new java.awt.Dimension(60, 25));
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 150, -1, -1));

        jLabel6.setText("Arrival Time");
        jLabel6.setMinimumSize(new java.awt.Dimension(60, 25));
        jLabel6.setPreferredSize(new java.awt.Dimension(60, 25));
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 210, 110, -1));

        txtFlightNum.setMinimumSize(new java.awt.Dimension(100, 20));
        txtFlightNum.setPreferredSize(new java.awt.Dimension(100, 20));
        jPanel1.add(txtFlightNum, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 60, 140, 23));

        txtAirplane.setMinimumSize(new java.awt.Dimension(100, 20));
        txtAirplane.setPreferredSize(new java.awt.Dimension(100, 20));
        jPanel1.add(txtAirplane, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 90, 140, 23));

        txtFrom.setMinimumSize(new java.awt.Dimension(100, 20));
        txtFrom.setPreferredSize(new java.awt.Dimension(100, 20));
        jPanel1.add(txtFrom, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 120, 140, 23));

        txtTo.setMinimumSize(new java.awt.Dimension(100, 20));
        txtTo.setPreferredSize(new java.awt.Dimension(100, 20));
        jPanel1.add(txtTo, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 150, 140, 23));

        txtArrival.setMinimumSize(new java.awt.Dimension(100, 20));
        txtArrival.setPreferredSize(new java.awt.Dimension(100, 20));
        jPanel1.add(txtArrival, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 210, 140, 23));

        jLabel7.setText("Time");
        jLabel7.setMinimumSize(new java.awt.Dimension(60, 25));
        jLabel7.setPreferredSize(new java.awt.Dimension(60, 25));
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 250, -1, -1));

        timeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel1.add(timeComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 250, 100, -1));

        jLabel8.setText("Departure Time");
        jLabel8.setMinimumSize(new java.awt.Dimension(60, 25));
        jLabel8.setPreferredSize(new java.awt.Dimension(60, 25));
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 180, 110, -1));

        txtDeparture.setMinimumSize(new java.awt.Dimension(100, 20));
        txtDeparture.setPreferredSize(new java.awt.Dimension(100, 20));
        jPanel1.add(txtDeparture, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 180, 140, 23));

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 11, 520, 290));

        btnBack.setText("< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 400, -1, -1));

        btnUpdateFlight.setText("update");
        btnUpdateFlight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateFlightActionPerformed(evt);
            }
        });
        add(btnUpdateFlight, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 330, -1, -1));

        btnConfirm.setText("confirm");
        btnConfirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmActionPerformed(evt);
            }
        });
        add(btnConfirm, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 330, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        rightPanel.remove(this);
        CardLayout layout = (CardLayout) rightPanel.getLayout();
        layout.previous(rightPanel);

    }//GEN-LAST:event_btnBackActionPerformed
    
    private void btnUpdateFlightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateFlightActionPerformed
        // TODO add your handling code here:
        setFieldEnabled(true);
        btnUpdateFlight.setEnabled(false);
    }//GEN-LAST:event_btnUpdateFlightActionPerformed

    private void btnConfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmActionPerformed
        try {
            // TODO add your handling code here:
            btnConfirm.setEnabled(true);
            List<Flight> flights = new ArrayList<>();
            String FlightNum = txtFlightNum.getText();
            String Airplane  =txtAirplane.getText();
            String From = txtFrom.getText();
            String To = txtTo.getText();
            Date dateDeparture = new SimpleDateFormat("dd-MMM-yyyy HH:mm:ss").parse(txtDeparture.getText());
            Date dateArrival = new SimpleDateFormat("dd-MMM-yyyy HH:mm:ss").parse(txtArrival.getText());
            if (dateArrival.compareTo(dateDeparture) != 1) {
                JOptionPane.showMessageDialog(null,"Arrival time cannot be earlier than departure time!");
                txtArrival.setText("");
                return;
            }
            for (Flight f : flightSchedule.getFlightList()) {
                if (f.getFlightNum().equalsIgnoreCase(FlightNum)) {
                    flights.add(f);
                }
            }
            for (Flight f : flights) {
                if (f.getArrivalTime().compareTo(dateDeparture) != -1) {
                    JOptionPane.showMessageDialog(null,"This flight is currently not available!");
                    return;
                }
            }
            String time = (String) timeComboBox.getSelectedItem();
            
            if(FlightNum==null || FlightNum.equals("")){
                JOptionPane.showMessageDialog(null, "Brand can't be empty!");
                return;
            }
            if(Airplane==null || Airplane.equals("")){
                JOptionPane.showMessageDialog(null, "Model Number can't be empty!");
                return;
            }
            if(From==null || From.equals("")){
                JOptionPane.showMessageDialog(null, "City can't be empty!");
                return;
            }
            if(To==null || To.equals("")){
                JOptionPane.showMessageDialog(null, "Model Number can't be empty!");
                return;
            }
            
            flight.setFlightNum(FlightNum);
            flight.setAirplane(Airplane);
            flight.setFrom(From);
            flight.setTo(To);
            flight.setDepartureTime(dateDeparture);
            flight.setArrivalTime(dateArrival);
            flight.setTimeSlot(time);
            
            
            JOptionPane.showMessageDialog(null,"Account successfully created!");
            populateTable();
            
            setFieldEnabled(false);
            btnConfirm.setEnabled(false);
            btnUpdateFlight.setEnabled(true);
        } catch (ParseException ex) {
            JOptionPane.showMessageDialog(null,"Date Format is Incorrect!");
        }
    }//GEN-LAST:event_btnConfirmActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnConfirm;
    private javax.swing.JButton btnUpdateFlight;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JComboBox<String> timeComboBox;
    private javax.swing.JTextField txtAirplane;
    private javax.swing.JTextField txtArrival;
    private javax.swing.JTextField txtDeparture;
    private javax.swing.JTextField txtFlightNum;
    private javax.swing.JTextField txtFrom;
    private javax.swing.JTextField txtTo;
    // End of variables declaration//GEN-END:variables
}
